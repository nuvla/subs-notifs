name: "Test and build."

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*.*.*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install pytest
        run: |
          python3 -m pip install --upgrade pytest

      - name: Install test requirements
        run: |
          python3 -m pip install --upgrade -r requirements.tests.txt

      - name: Make internal packages part of nuvla-api distribution
        run: |
          export SITE_PACKAGES=$(dirname $(python3 -c 'import os; print(os.__file__)'))/site-packages
          ln -sf $(pwd)/nuvla/notifs $SITE_PACKAGES/nuvla/

      - name: Run unit tests
        run: |
          pytest --junitxml=test-report.xml --cov=. --cov-report=xml --cov-config=coverage.rc

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: "Dockerfile*"
          output-file: "hadolint-output.json"
          no-fail: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Multi-arch docker image build prerequired
        run: sudo docker run --privileged linuxkit/binfmt:v0.7

      - name: Build and deploy on architecture
        env:
          SIXSQ_DOCKER_USERNAME: ${{ secrets.SIXSQ_DOCKER_USERNAME }}
          SIXSQ_DOCKER_PASSWORD: ${{ secrets.SIXSQ_DOCKER_PASSWORD }}
        run: ./container-release.sh

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: code/test-report.xml

  notify:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          icon_emoji: ':rocket:'
